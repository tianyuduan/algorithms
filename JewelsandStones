# You're given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels.
# 
# The letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so "a" is considered a different type of stone from "A".
# 
# Example 1:
# 
# Input: J = "aA", S = "aAAbbbb"
# Output: 3
# Example 2:
# 
# Input: J = "z", S = "ZZ"
# Output: 0
# Note:
# 
# S and J will consist of letters and have length at most 50.
# The characters in J are distinct.

# 
def jewels_in_stone(jewel, stone)
  count = 0
  stone.each_char do |i|
   count += 1 if jewel.include?(i)
  end
  count
end

p jewels_in_stone("aA", "aAAbbbb")
p jewels_in_stone("z", "ZZ")

# Complexity of J * L


def jewels_in_stone_2(jewel, stone)
  count = Hash.new(0)
  stone.each_char do |i|
    count[i] += 1
  end
  
  return_counter = 0
  jewel.each_char do |j|
    return_counter += count[j] if count[j]
  end
  return_counter
end


p jewels_in_stone_2("aA", "aAAbbbb")
# Complexity of J X L

